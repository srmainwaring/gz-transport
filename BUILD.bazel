load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_FEATURES",
    "IGNITION_ROOT",
    "IGNITION_VISIBILITY",
    "cmake_configure_file",
    "generate_include_header",
    "generate_yaml",
    "ign_config_header",
    "ign_export_header",
)

package(
    default_visibility = IGNITION_VISIBILITY,
    features = IGNITION_FEATURES,
)

licenses(["notice"])

exports_files(["LICENSE"])

PROJECT_NAME = "ignition-transport"

PROJECT_MAJOR = 9

PROJECT_MINOR = 0

PROJECT_PATCH = 0

# Generates config.hh based on the version numbers in CMake code.
ign_config_header(
    name = "config",
    src = "include/ignition/transport/config.hh.in",
    cmakelists = ["CMakeLists.txt"],
    project_name = PROJECT_NAME,
    project_version = (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),
)

ign_export_header(
    name = "include/ignition/transport/Export.hh",
    export_base = "IGNITION_TRANSPORT",
    lib_name = "ignition-transport",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = glob([
    "include/ignition/transport/*.hh",
    "include/ignition/transport/*.h",
    "include/ignition/transport/detail/*.hh",
])

private_headers = glob(["src/*.hh"])

sources = glob(
    ["src/*.cc"],
    exclude = [
        "src/*_TEST.cc",
        "src/ign.cc",
    ],
)

# TODO(srmainwaring):
# Disable Discovery_TEST on macOS (timeout failure)
test_sources = glob(
    ["src/*_TEST.cc"],
    exclude = [
      "src/ign_*.cc",
      "src/Discovery_TEST.cc",
    ],
)

generate_include_header(
    name = "transporthh_genrule",
    out = "include/ignition/transport.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/transport/config.hh",
        "include/ignition/transport/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/transport/config.hh",
    "include/ignition/transport/Export.hh",
    "include/ignition/transport.hh",
]

config_setting(
    name = "custom",
    values = {
        "define": "enable_ifaddrs=true",
    },
)

# TODO(srmainwaring):
# Remove dependency on @uuid for macOS
# See: https://github.com/ignitionrobotics/ign-cmake/issues/127
cc_library(
    name = "ign_transport",
    srcs = sources + private_headers,
    hdrs = public_headers,
    defines = select({
        ":custom": ["HAVE_IFADDRS"],
        "//conditions:default": [],
    }),
    includes = ["include"],
    deps = [
        "@sqlite3",
        # "@uuid",
        "@zmq",
        IGNITION_ROOT + "ign_msgs",
        IGNITION_ROOT + "ign_bazel:utilities",
    ],
)

cc_binary(
    name = "libignition-transport.so",
    srcs = ["src/ign.cc"],
    includes = ["include"],
    linkshared = True,
    deps = [":ign_transport"],
)

[cc_test(
    name = src.replace("src/", "").replace(".cc", ""),
    srcs = [src],
    defines = [
        "IGN_TRANSPORT_TEST_DIR='\"./ign_transport/test\"'",
        "IGN_TEST_LIBRARY_PATH='\"./ign_transport/test\"'",
    ],
    deps = [
        ":ign_transport",
        "//ign_transport/test:test_utils",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_sources]

cmake_configure_file(
    name = "transport.rb",
    src = "src/cmd/cmdtransport.rb.in",
    out = "cmdtransport.rb",
    cmakelists = ["CMakeLists.txt"],
    defines = [
        "library_location=libignition-transport.so",
        "PROJECT_VERSION_FULL=%d.%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),  # noqa
        "IGN_LIBRARY_NAME=%s" % [PROJECT_NAME],
    ],
)

CMDS = "    - topic   : Print information about topics.\n    - service   : Print information about services."

generate_yaml(
    name = "transport",
    commands = CMDS,
    library_name = PROJECT_NAME,
    library_version = "%d.%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),
    ruby_target = "transport.rb",
)
